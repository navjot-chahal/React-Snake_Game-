{"ast":null,"code":"var _jsxFileName = \"/Users/chahal/Documents/React Projects/snake/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Grid } from \"./Grid\";\nimport { useInterval } from \"./useInterval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gridSize = 40;\n\nconst arrInitialize = () => {\n  let arr = new Array(gridSize);\n\n  for (let i = 0; i < gridSize; i++) {\n    arr[i] = new Array(gridSize);\n  }\n\n  return arr;\n};\n\nexport function App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  useEffect(_s(() => {\n    _s();\n\n    // Setting States\n    const [arr, setArr] = useState(arrInitialize());\n    const [dots, setDots] = useState([[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5]]);\n    const [delay, setDelay] = useState(1000);\n    const [direction, setDirection] = useState(\"RIGHT\");\n    document.onkeydown = onKeyDown;\n    arrErase();\n  }, \"BYwUP0/85z/iCzLsobWSuwZ0giM=\"), []); // Using interval hook\n\n  useInterval(() => {\n    // snakeMove()\n    console.log(\"Snake Moving\");\n    console.log(direction);\n    console.log(\"Delay is: \" + delay);\n  }, delay); // Array Functions\n\n  function arrErase() {\n    let thisArr = arr;\n\n    for (let i = 0; i < gridSize; i++) {\n      for (let j = 0; j < gridSize; j++) {\n        thisArr[i][j] = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this);\n      }\n    }\n\n    setArr(thisArr);\n  } // Snake\n\n\n  function snakeMove() {\n    let snakeDots = [...dots];\n    let head = snakeDots[snakeDots.length - 1];\n\n    switch (direction) {\n      case \"RIGHT\":\n        head = [head[0] + 2, head[1]];\n        break;\n\n      case \"DOWN\":\n        head = [head[0], head[1] + 2];\n        break;\n\n      case \"LEFT\":\n        head = [head[0] - 2, head[1]];\n        break;\n\n      case \"UP\":\n        head = [head[0], head[1] - 2];\n        break;\n    }\n\n    snakeDots.push(head);\n    snakeDots.shift();\n    setDots(snakeDots);\n  } // Snake Update\n\n\n  function snakeUpdate() {} // Keyboard Event\n\n\n  function onKeyDown(e) {\n    console.log(\"Key pressed\");\n    setDelay(delay - 100);\n    e = e || window.event;\n\n    switch (e.keyCode) {\n      case 38:\n        setDirection(\"UP\");\n        break;\n\n      case 40:\n        setDirection(\"DOWN\");\n        break;\n\n      case 37:\n        setDirection(\"LEFT\");\n        break;\n\n      case 39:\n        setDirection(\"RIGHT\");\n        break;\n    }\n  } // LifeCycle Functions\n\n\n  useEffect(() => {\n    checkHitBoundary();\n    checkHitBody();\n    checkForFood();\n  }); // Cheker Functions\n\n  function checkHitBoundary() {}\n\n  function checkHitBody() {}\n\n  function checkForFood() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: Grid(arr)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(App, \"g2WTgAOljvulKilGsEelrouyc4Q=\", false, function () {\n  return [useInterval];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chahal/Documents/React Projects/snake/src/App.js"],"names":["React","useState","useEffect","useRef","Grid","useInterval","gridSize","arrInitialize","arr","Array","i","App","setArr","dots","setDots","delay","setDelay","direction","setDirection","document","onkeydown","onKeyDown","arrErase","console","log","thisArr","j","snakeMove","snakeDots","head","length","push","shift","snakeUpdate","e","window","event","keyCode","checkHitBoundary","checkHitBody","checkForFood"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\nimport {Grid} from \"./Grid\"\nimport { useInterval } from \"./useInterval\"\n\nconst gridSize= 40\n\nconst arrInitialize = () => {\n    let arr = new Array(gridSize)\n\n    for (let i=0; i<gridSize ; i++){\n        arr[i] = new Array(gridSize)\n    }\n\n    return arr\n}\n\n\n\n\nexport function App() {\n\n    useEffect(() => {\n        // Setting States\n        const [arr, setArr] = useState(arrInitialize())\n        const [dots, setDots] = useState([[0,0],[0,1],[0,2],[0,3],[0,4],[0,5]])\n        const [delay, setDelay] = useState(1000)\n        const [direction, setDirection] = useState(\"RIGHT\")\n        \n        document.onkeydown = onKeyDown\n        \n        arrErase()\n    },[])\n    \n\n    // Using interval hook\n    useInterval(() => {\n        // snakeMove()\n        console.log(\"Snake Moving\")\n        console.log(direction)\n        console.log(\"Delay is: \" + delay)\n    } ,delay)\n\n\n\n    // Array Functions\n\n    function arrErase() {\n        let thisArr = arr\n\n        for (let i=0 ; i<gridSize ; i++) {\n            for (let j=0 ; j<gridSize ; j++) {\n                thisArr[i][j] = <div className=\"block\"></div>\n            }\n        }\n        setArr(thisArr)\n    }\n\n    // Snake\n    function snakeMove(){\n        let snakeDots = [...dots]\n        let head = snakeDots[snakeDots.length - 1]\n\n        switch (direction) {\n            case \"RIGHT\":\n                head = [head[0] + 2, head[1]]\n                break\n            case \"DOWN\":\n                head = [head[0], head[1] + 2]\n                break\n            case \"LEFT\":\n                head = [head[0] - 2, head[1]]\n                break\n            case \"UP\":\n                head = [head[0], head[1] - 2]\n                break\n        }\n\n        snakeDots.push(head)\n        snakeDots.shift()\n        setDots(snakeDots)\n    }\n\n    // Snake Update\n\n    function snakeUpdate(){\n\n    }\n\n    // Keyboard Event\n    function onKeyDown(e){\n        console.log(\"Key pressed\")\n        \n        setDelay(delay-100)\n        e = e || window.event\n        switch (e.keyCode) {\n            case 38:\n                setDirection(\"UP\")\n                break\n            case 40:\n                setDirection(\"DOWN\")\n                break\n            case 37:\n                setDirection(\"LEFT\")\n                break\n            case 39:\n                setDirection(\"RIGHT\")\n                break\n        }\n    }\n\n\n    // LifeCycle Functions\n\n    \n\n\n    useEffect(() => {\n        checkHitBoundary()\n        checkHitBody()\n        checkForFood()\n    })\n\n\n\n    // Cheker Functions\n\n    function checkHitBoundary(){\n\n    }\n\n    function checkHitBody(){\n\n    }\n\n    function checkForFood(){\n\n    }\n\n\n\n        \n\n\n\n    return(\n        <div className=\"container\">\n            {Grid(arr)}\n        </div>\n    )\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}