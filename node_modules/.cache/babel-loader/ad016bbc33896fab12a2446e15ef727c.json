{"ast":null,"code":"var _jsxFileName = \"/Users/chahal/Documents/React Projects/snake/src/App.js\";\nimport React, { Component } from \"react\";\nimport Grid from \"./Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      size: 40,\n      speed: 1000,\n      arr: [[]],\n      count: 0,\n      //From Snake.js\n      dots: [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5]],\n      direction: \"RIGHT\",\n      directionUpdate: true,\n      //From Snake.js\n      //From Food.js\n      location: [],\n      foodAte: false //From Food.js\n\n    };\n    this.bodyHit = this.bodyHit.bind(this);\n    this.cellCompare = this.cellCompare.bind(this);\n    this.setArr = this.setArr.bind(this);\n    this.gameReset = this.gameReset.bind(this); //From Snake.js\n\n    this.snakeMove = this.snakeMove.bind(this);\n    this.snakeUpdate = this.snakeUpdate.bind(this);\n    this.moveUp = this.moveUp.bind(this);\n    this.moveRight = this.moveRight.bind(this);\n    this.moveDown = this.moveDown.bind(this);\n    this.moveLeft = this.moveLeft.bind(this);\n    this.eventHandler = this.eventHandler.bind(this);\n    this.snakeGrow = this.snakeGrow.bind(this); //From Snake.js\n    //From Food.js\n\n    this.randomLocation = this.randomLocation.bind(this); //From Food.js\n\n    this.eraseGrid = this.eraseGrid.bind(this);\n    this.refillGrid = this.refillGrid.bind(this);\n    this.intialFill = this.intialFill.bind(this);\n    this.checkFood = this.checkFood.bind(this);\n    this.getHead = this.getHead.bind(this); // this.boundaryHit=this.boundaryHit.bind(this);\n  }\n\n  gameReset() {\n    this.eraseGrid();\n    this.setState({\n      dots: [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5]],\n      direction: \"RIGHT\",\n      directionUpdate: true,\n      //From Snake.js\n      //From Food.js\n      location: this.randomLocation(),\n      foodAte: false\n    });\n  }\n\n  setArr(array) {\n    this.setState({\n      arr: array\n    });\n  }\n\n  intialFill() {\n    this.state.arr = new Array(this.state.size);\n\n    for (let i = 0; i < this.state.size; i++) {\n      this.state.arr[i] = new Array(this.state.size);\n    }\n\n    for (let i = 0; i < this.state.size; i++) {\n      for (let j = 0; j < this.state.size; j++) {\n        this.state.arr[i][j] = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 39\n        }, this);\n      }\n    }\n  } //From Snake.js\n\n\n  snakeUpdate() {\n    this.checkFood();\n    this.bodyHit(); // this.boundaryHit();\n\n    this.eraseGrid(); // Snake Entry to arr\n\n    this.refillGrid(this.state.dots); //Food Entry to arr\n\n    this.refillGrid(this.state.location);\n    this.setArr(this.state.arr);\n  }\n\n  cellCompare(cell1, cell2) {\n    return cell1[0] === cell2[0] && cell1[1] === cell2[1];\n  }\n\n  snakeGrow() {\n    let head = this.getHead();\n\n    switch (this.state.direction) {\n      case \"RIGHT\":\n        this.state.dots.push([head[0] + 1, head[1]]);\n        break;\n\n      case \"DOWN\":\n        this.state.dots.push([head[0], head[1] + 1]);\n        break;\n\n      case \"LEFT\":\n        this.state.dots.push([head[0] - 1, head[1]]);\n        break;\n\n      case \"UP\":\n        this.state.dots.push([head[0], head[1] - 1]);\n        break;\n    }\n  }\n\n  eraseGrid() {\n    for (let i = 0; i < this.state.arr.length; i++) {\n      for (let j = 0; j < this.state.arr.length; j++) {\n        this.state.arr[i][j] = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 39\n        }, this);\n      }\n    }\n  }\n\n  refillGrid(arr) {\n    if (arr[0][0] === undefined) {\n      this.state.arr[arr[0]][arr[1]] = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 45\n      }, this);\n      return;\n    }\n\n    ;\n\n    for (let i = 0; i < arr.length; i++) {\n      let x = arr[i][0];\n      let y = arr[i][1];\n      this.state.arr[x][y] = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 35\n      }, this);\n    }\n  }\n\n  snakeMove() {\n    switch (this.state.direction) {\n      case \"UP\":\n        this.moveUp();\n        break;\n\n      case \"RIGHT\":\n        this.moveRight();\n        break;\n\n      case \"DOWN\":\n        this.moveDown();\n        break;\n\n      case \"LEFT\":\n        this.moveLeft();\n        break;\n    }\n\n    this.snakeUpdate();\n  }\n\n  moveRight() {\n    let tempArr = this.state.dots;\n    tempArr[0] = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 20\n    }, this);\n    tempArr.shift();\n    tempArr.push([tempArr[tempArr.length - 1][0] + 1, tempArr[tempArr.length - 1][1]]);\n    this.state.dots = tempArr;\n  }\n\n  moveDown() {\n    let tempArr = this.state.dots;\n    tempArr[0] = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 20\n    }, this);\n    tempArr.shift();\n    tempArr.push([tempArr[tempArr.length - 1][0], tempArr[tempArr.length - 1][1] + 1]);\n    this.state.dots = tempArr;\n  }\n\n  moveLeft() {\n    let tempArr = this.state.dots;\n    tempArr[0] = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 20\n    }, this);\n    tempArr.shift();\n    tempArr.push([tempArr[tempArr.length - 1][0] - 1, tempArr[tempArr.length - 1][1]]);\n    this.state.dots = tempArr;\n  }\n\n  moveUp() {\n    let tempArr = this.state.dots;\n    tempArr[0] = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 20\n    }, this);\n    tempArr.shift();\n    tempArr.push([tempArr[tempArr.length - 1][0], tempArr[tempArr.length - 1][1] - 1]);\n    this.state.dots = tempArr;\n  }\n\n  eventHandler(e) {\n    if (!this.state.directionUpdate) return;\n\n    switch (e.code) {\n      case \"ArrowRight\":\n        if (this.state.direction === \"RIGHT\" || this.state.direction === \"LEFT\") return;\n        this.state.direction = \"RIGHT\";\n        break;\n\n      case \"ArrowDown\":\n        if (this.state.direction === \"DOWN\" || this.state.direction === \"UP\") return;\n        this.state.direction = \"DOWN\";\n        break;\n\n      case \"ArrowLeft\":\n        if (this.state.direction === \"RIGHT\" || this.state.direction === \"LEFT\") return;\n        this.state.direction = \"LEFT\";\n        break;\n\n      case \"ArrowUp\":\n        if (this.state.direction === \"DOWN\" || this.state.direction === \"UP\") return;\n        this.state.direction = \"UP\";\n        break;\n    }\n\n    this.state.directionUpdate = false;\n  }\n\n  componentDidMount() {\n    this.intialFill();\n    this.state.location = this.randomLocation();\n    setInterval(this.snakeMove, this.state.speed);\n    window.addEventListener(\"keydown\", this.eventHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.eventHandler);\n  }\n\n  getHead() {\n    return this.state.dots[this.state.dots.length - 1];\n  } //From Snake.js\n  //From Food.js\n\n\n  checkFood() {\n    if (this.cellCompare(this.getHead(), this.state.location)) {\n      this.snakeGrow();\n    }\n  }\n\n  randomLocation() {\n    return [Math.floor(Math.random() * (this.state.size - 0)) + 0, Math.floor(Math.random() * (this.state.size - 0)) + 0];\n  } //From Food.js\n\n\n  bodyHit() {\n    let head = this.getHead();\n\n    for (let i = 0; i < this.state.dots.length - 1; i++) {\n      if (this.state.dots[i][0] === head[0] && this.state.dots[i][1] === head[1]) {\n        this.gameReset();\n      }\n    }\n\n    return null;\n  }\n\n  boundaryHit() {\n    let head = this.getHead();\n\n    if (head[0] < 0 || head[0] > this.state.size || head[1] < 0 || head[1] > this.state.size) {\n      this.gameReset();\n    }\n  }\n\n  render() {\n    this.state.directionUpdate = true;\n\n    if (this.state.count === 0) {\n      this.state.count++;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        arr: this.state.arr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chahal/Documents/React Projects/snake/src/App.js"],"names":["React","Component","Grid","App","constructor","props","state","size","speed","arr","count","dots","direction","directionUpdate","location","foodAte","bodyHit","bind","cellCompare","setArr","gameReset","snakeMove","snakeUpdate","moveUp","moveRight","moveDown","moveLeft","eventHandler","snakeGrow","randomLocation","eraseGrid","refillGrid","intialFill","checkFood","getHead","setState","array","Array","i","j","cell1","cell2","head","push","length","undefined","x","y","tempArr","shift","e","code","componentDidMount","setInterval","window","addEventListener","componentWillUnmount","removeEventListener","Math","floor","random","boundaryHit","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport Grid from \"./Grid\"\n\nclass App extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            size: 40,\n            speed: 1000,\n            arr:[[]],\n            count: 0,\n            //From Snake.js\n            dots: [[0,0],[0,1],[0,2],[0,3],[0,4],[0,5]],\n            direction: \"RIGHT\",\n            directionUpdate: true,\n            //From Snake.js\n\n            //From Food.js\n            location: [],\n            foodAte: false\n            //From Food.js\n        }\n        this.bodyHit=this.bodyHit.bind(this);\n        this.cellCompare=this.cellCompare.bind(this);\n        this.setArr=this.setArr.bind(this);\n        this.gameReset=this.gameReset.bind(this);\n\n        //From Snake.js\n        this.snakeMove=this.snakeMove.bind(this);\n        this.snakeUpdate=this.snakeUpdate.bind(this);\n\n        this.moveUp=this.moveUp.bind(this);\n        this.moveRight=this.moveRight.bind(this);\n        this.moveDown=this.moveDown.bind(this);\n        this.moveLeft=this.moveLeft.bind(this);\n\n        this.eventHandler=this.eventHandler.bind(this);\n        this.snakeGrow=this.snakeGrow.bind(this);\n        //From Snake.js\n\n        //From Food.js\n        this.randomLocation=this.randomLocation.bind(this);\n        //From Food.js\n\n        this.eraseGrid=this.eraseGrid.bind(this);\n        this.refillGrid=this.refillGrid.bind(this);\n\n        this.intialFill=this.intialFill.bind(this);\n        this.checkFood=this.checkFood.bind(this);\n        this.getHead=this.getHead.bind(this);\n        \n        // this.boundaryHit=this.boundaryHit.bind(this);\n    }\n\n    gameReset(){\n        this.eraseGrid();\n        this.setState({\n            dots: [[0,0],[0,1],[0,2],[0,3],[0,4],[0,5]],\n            direction: \"RIGHT\",\n            directionUpdate: true,\n            //From Snake.js\n\n            //From Food.js\n            location: this.randomLocation(),\n            foodAte: false\n        })\n    }\n\n    setArr(array){\n        this.setState({\n            arr: array\n        })\n    }\n\n    intialFill(){\n        this.state.arr = new Array(this.state.size);\n\n        for (let i=0;i<this.state.size;i++){\n            this.state.arr[i] = new Array(this.state.size);\n        }\n\n        for (let i=0;i<this.state.size;i++){\n            for (let j=0;j<this.state.size;j++){\n                this.state.arr[i][j]= <div className=\"block\"></div>;\n            }\n        }\n    }\n\n    //From Snake.js\n    \n\n    snakeUpdate(){\n\n        this.checkFood();\n        this.bodyHit();\n        // this.boundaryHit();\n\n\n        this.eraseGrid();\n        // Snake Entry to arr\n        this.refillGrid(this.state.dots);\n\n        //Food Entry to arr\n        this.refillGrid(this.state.location);\n\n        \n        \n        this.setArr(this.state.arr);\n   }\n\n   \n\n   cellCompare(cell1,cell2){\n        return ((cell1[0]===cell2[0]) && (cell1[1]===cell2[1]));\n   }\n\n    snakeGrow(){\n        let head=this.getHead();\n        switch (this.state.direction){\n            case \"RIGHT\":\n                this.state.dots.push([head[0]+1,head[1]]);\n                break;\n            case \"DOWN\":\n                this.state.dots.push([head[0],head[1]+1]);\n                break;\n            case \"LEFT\":\n                this.state.dots.push([head[0]-1,head[1]]);\n                break;\n            case \"UP\":\n                this.state.dots.push([head[0],head[1]-1]);\n                break;       \n        }\n    }\n\n    eraseGrid(){\n        for (let i=0;i<this.state.arr.length;i++){\n            for (let j=0;j<this.state.arr.length;j++){\n                this.state.arr[i][j]= <div className=\"block\"></div>;\n            }\n        }\n    }\n\n    refillGrid(arr){\n\n        if (arr[0][0]===undefined) {\n            this.state.arr[arr[0]][arr[1]]= <div className=\"dot\"></div>;\n            return;\n        };\n        for (let i=0; i<arr.length;i++){\n            let x = arr[i][0];\n            let y = arr[i][1];\n\n            this.state.arr[x][y]= <div className=\"dot\"></div>;\n        }\n    }\n\n   snakeMove() {\n\n        switch (this.state.direction){\n            case \"UP\":\n                this.moveUp();\n                break;\n            case \"RIGHT\":\n                this.moveRight();\n                break;\n            case \"DOWN\":\n                this.moveDown();\n                break;\n            case \"LEFT\":\n                this.moveLeft();\n                break;\n        }  \n        this.snakeUpdate();    \n    }\n\n    moveRight(){\n        let tempArr=this.state.dots;\n        tempArr[0]=<div className=\"dot\"></div>;\n        tempArr.shift()\n        tempArr.push([tempArr[tempArr.length-1][0]+1,tempArr[tempArr.length-1][1]]);\n\n        this.state.dots=tempArr;\n    }\n\n    moveDown(){\n        let tempArr=this.state.dots;\n        tempArr[0]=<div className=\"dot\"></div>;\n        tempArr.shift()\n        tempArr.push([tempArr[tempArr.length-1][0],tempArr[tempArr.length-1][1]+1]);\n\n        this.state.dots=tempArr;\n    }\n\n    moveLeft(){\n        let tempArr=this.state.dots;\n        tempArr[0]=<div className=\"dot\"></div>;\n        tempArr.shift();\n        tempArr.push([tempArr[tempArr.length-1][0]-1,tempArr[tempArr.length-1][1]]);\n\n        this.state.dots=tempArr;\n    }\n\n    moveUp(){\n        let tempArr=this.state.dots;\n        tempArr[0]=<div className=\"dot\"></div>;\n        tempArr.shift()\n        tempArr.push([tempArr[tempArr.length-1][0],tempArr[tempArr.length-1][1]-1]);\n\n        this.state.dots=tempArr;\n    }\n\n   eventHandler(e){\n\n    if(!this.state.directionUpdate) return;\n\n    switch(e.code){\n        case \"ArrowRight\":\n            if (this.state.direction===\"RIGHT\" || this.state.direction===\"LEFT\" ) return;\n            this.state.direction = \"RIGHT\";\n            break;\n        case \"ArrowDown\":\n            if (this.state.direction===\"DOWN\" || this.state.direction===\"UP\" ) return;\n            this.state.direction = \"DOWN\";\n            break;\n        case \"ArrowLeft\":\n            if (this.state.direction===\"RIGHT\" || this.state.direction===\"LEFT\" ) return;\n            this.state.direction = \"LEFT\";\n            break;\n        case \"ArrowUp\":\n            if (this.state.direction===\"DOWN\" || this.state.direction===\"UP\" ) return;\n            this.state.direction = \"UP\";\n            break;\n        }\n        this.state.directionUpdate=false;\n    }\n\n    componentDidMount(){   \n        this.intialFill(); \n        this.state.location=this.randomLocation();\n        setInterval(this.snakeMove,this.state.speed);\n        window.addEventListener(\"keydown\",this.eventHandler);\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener(\"keydown\",this.eventHandler);\n    }\n\n    getHead(){\n        return this.state.dots[this.state.dots.length-1];\n    }\n\n\n    //From Snake.js\n\n    //From Food.js\n\n    checkFood(){\n        if(this.cellCompare(this.getHead(),this.state.location)){\n            this.snakeGrow();\n        }\n    }\n\n    randomLocation(){\n        return [Math.floor(Math.random() * (this.state.size - 0)) + 0,Math.floor(Math.random() * (this.state.size - 0)) + 0];\n    }\n\n    //From Food.js\n\n    bodyHit(){\n        let head=this.getHead();\n        for (let i=0;i<this.state.dots.length-1;i++){\n            if (this.state.dots[i][0]===head[0] && this.state.dots[i][1]===head[1]){\n                this.gameReset();\n            }\n        }\n        return null;\n\n   }\n\n   boundaryHit(){\n        let head=this.getHead();\n        if (head[0]<0 || head[0]>this.state.size || head[1]<0 || head[1]>this.state.size){\n            this.gameReset();\n        }\n   }\n     \n\n    render(){\n        this.state.directionUpdate=true;\n\n        if (this.state.count===0){\n            this.state.count++;\n        }\n    \n\n        return(\n            \n            <div className=\"container\">\n                <Grid arr={this.state.arr}/>\n            </div>\n            \n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}