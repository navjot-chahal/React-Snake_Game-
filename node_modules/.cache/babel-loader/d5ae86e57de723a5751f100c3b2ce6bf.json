{"ast":null,"code":"var _jsxFileName = \"/Users/chahal/Documents/React Projects/snake/src/Snake.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Snake extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dots: [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5]],\n      direction: \"RIGHT\",\n      directionUpdate: true\n    };\n  }\n\n  snakeUpdate() {\n    // Snake update\n    let some = this.props.arr;\n\n    for (let i = 0; i < this.state.dots.length; i++) {\n      let x = this.state.dots[i][0];\n      let y = this.state.dots[i][1];\n      some[x][y] = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this);\n    } // Snake \n\n\n    this.props.setArr(some);\n  }\n\n  eventHandler(e) {\n    console.log(\"Some key Pressed!!!!\");\n    console.log(e.code);\n    if (!this.state.directionUpdate) return;\n\n    switch (e.code) {\n      case \"ArrowRight\":\n        if (this.state.direction === \"RIGHT\" || this.state.direction === \"LEFT\") return;\n        this.state.direction = \"RIGHT\";\n        break;\n\n      case \"ArrowDown\":\n        if (this.state.direction === \"DOWN\" || this.state.direction === \"UP\") return;\n        this.state.direction = \"DOWN\";\n        break;\n\n      case \"ArrowLeft\":\n        if (this.state.direction === \"RIGHT\" || this.state.direction === \"LEFT\") return;\n        this.state.direction = \"LEFT\";\n        break;\n\n      case \"ArrowUp\":\n        if (this.state.direction === \"DOWN\" || this.state.direction === \"UP\") return;\n        this.state.direction = \"UP\";\n        break;\n    }\n\n    this.state.directionUpdate = false;\n  }\n\n  componentDidMount() {\n    this.snakeUpdate(); // console.log(this.props.dots);\n    // this.snakeMove();\n\n    setInterval(this.snakeMove, 100);\n    window.addEventListener(\"keydown\", this.eventHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.eventHandler);\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default Snake;","map":{"version":3,"sources":["/Users/chahal/Documents/React Projects/snake/src/Snake.js"],"names":["React","Component","Snake","constructor","props","state","dots","direction","directionUpdate","snakeUpdate","some","arr","i","length","x","y","setArr","eventHandler","e","console","log","code","componentDidMount","setInterval","snakeMove","window","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\n\n\nclass Snake extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state={\n            dots: [[0,0],[0,1],[0,2],[0,3],[0,4],[0,5]],\n            direction: \"RIGHT\",\n            directionUpdate: true\n        }\n\n\n    }\n\n    snakeUpdate(){\n       // Snake update\n       let some=this.props.arr;\n       for (let i=0; i<this.state.dots.length;i++){\n           let x = this.state.dots[i][0];\n           let y = this.state.dots[i][1];\n\n           some[x][y]= <div className=\"dot\"></div>;\n       }\n       // Snake \n       this.props.setArr(some);\n   }\n\n   eventHandler(e){\n    console.log(\"Some key Pressed!!!!\");\n    console.log(e.code);\n\n    if(!this.state.directionUpdate) return;\n\n    switch(e.code){\n        case \"ArrowRight\":\n            if (this.state.direction===\"RIGHT\" || this.state.direction===\"LEFT\" ) return;\n            this.state.direction = \"RIGHT\";\n            break;\n        case \"ArrowDown\":\n            if (this.state.direction===\"DOWN\" || this.state.direction===\"UP\" ) return;\n            this.state.direction = \"DOWN\";\n            break;\n        case \"ArrowLeft\":\n            if (this.state.direction===\"RIGHT\" || this.state.direction===\"LEFT\" ) return;\n            this.state.direction = \"LEFT\";\n            break;\n        case \"ArrowUp\":\n            if (this.state.direction===\"DOWN\" || this.state.direction===\"UP\" ) return;\n            this.state.direction = \"UP\";\n            break;\n        }\n        this.state.directionUpdate=false;\n    }\n\n    componentDidMount(){   \n        this.snakeUpdate();\n        // console.log(this.props.dots);\n        // this.snakeMove();\n        setInterval(this.snakeMove,100);\n        window.addEventListener(\"keydown\",this.eventHandler);\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener(\"keydown\",this.eventHandler);\n    }\n\n    render(){\n\n        return null;\n    }\n\n\n\n}\n\nexport default Snake;"]},"metadata":{},"sourceType":"module"}