{"ast":null,"code":"var _jsxFileName = \"/Users/chahal/Documents/React Projects/snake/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Grid } from \"./Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gridSize = 40;\n\nconst arrInitialize = () => {\n  let arr = new Array(gridSize);\n\n  for (let i = 0; i < gridSize; i++) {\n    arr[i] = new Array(gridSize);\n  }\n\n  return arr;\n};\n\nconsole.log(arr);\nexport function App() {\n  _s();\n\n  // Setting States\n  const [arr, setArr] = useState(arrInitialize());\n  const [dots, setDots] = useState([[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5]]);\n  const [delay, setDelay] = useState(1000);\n  const [direction, setDirection] = useState(\"RIGHT\"); // Using interval hook\n\n  useInterval(() => {\n    snakeMove();\n  }, delay); // Array Functions\n\n  function arrErase() {\n    let thisArr = arr;\n\n    for (let i = 0; i < gridSize; i++) {\n      for (let j = 0; j < gridSize; j++) {\n        thisArr[i][j] = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }, this);\n      }\n    }\n\n    this.setState({\n      arr: thisArr\n    });\n  } // Snake\n\n\n  function snakeMove() {\n    let snakeDots = [...dots];\n    let head = snakeDots[snakeDots.length - 1];\n  }\n\n  function moveRight() {}\n\n  function moveDown() {}\n\n  function moveLeft() {}\n\n  function moveUp() {} // Snake Update\n\n\n  function snakeUpdate() {} // LifeCycle Functions\n  // componentDidMount(){\n  //     this.arrErase()\n  // }\n  // LifeCycle Functions\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: Grid(this.state.arr)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"67E+u3I2EbILETyrzuwfjls50ZA=\", true);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chahal/Documents/React Projects/snake/src/App.js"],"names":["React","useState","useEffect","useRef","Grid","gridSize","arrInitialize","arr","Array","i","console","log","App","setArr","dots","setDots","delay","setDelay","direction","setDirection","useInterval","snakeMove","arrErase","thisArr","j","setState","snakeDots","head","length","moveRight","moveDown","moveLeft","moveUp","snakeUpdate","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAAQC,IAAR,QAAmB,QAAnB;;AAEA,MAAMC,QAAQ,GAAE,EAAhB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,MAAIC,GAAG,GAAG,IAAIC,KAAJ,CAAUH,QAAV,CAAV;;AAEA,OAAK,IAAII,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,QAAhB,EAA2BI,CAAC,EAA5B,EAA+B;AAC3BF,IAAAA,GAAG,CAACE,CAAD,CAAH,GAAS,IAAID,KAAJ,CAAUH,QAAV,CAAT;AACH;;AAED,SAAOE,GAAP;AACH,CARD;;AAUAG,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AAIA,OAAO,SAASK,GAAT,GAAe;AAAA;;AAClB;AACA,QAAM,CAACL,GAAD,EAAMM,MAAN,IAAgBZ,QAAQ,CAACK,aAAa,EAAd,CAA9B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAO,CAAC,CAAD,EAAG,CAAH,CAAP,EAAa,CAAC,CAAD,EAAG,CAAH,CAAb,EAAmB,CAAC,CAAD,EAAG,CAAH,CAAnB,EAAyB,CAAC,CAAD,EAAG,CAAH,CAAzB,EAA+B,CAAC,CAAD,EAAG,CAAH,CAA/B,CAAD,CAAhC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,OAAD,CAA1C,CALkB,CAOlB;;AACAmB,EAAAA,WAAW,CAAC,MAAM;AACdC,IAAAA,SAAS;AACZ,GAFU,EAERL,KAFQ,CAAX,CARkB,CAalB;;AAEA,WAASM,QAAT,GAAoB;AAChB,QAAIC,OAAO,GAAGhB,GAAd;;AAEA,SAAK,IAAIE,CAAC,GAAC,CAAX,EAAeA,CAAC,GAACJ,QAAjB,EAA4BI,CAAC,EAA7B,EAAiC;AAC7B,WAAK,IAAIe,CAAC,GAAC,CAAX,EAAeA,CAAC,GAACnB,QAAjB,EAA4BmB,CAAC,EAA7B,EAAiC;AAC7BD,QAAAA,OAAO,CAACd,CAAD,CAAP,CAAWe,CAAX,iBAAgB;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAhB;AACH;AACJ;;AAED,SAAKC,QAAL,CAAc;AACVlB,MAAAA,GAAG,EAAEgB;AADK,KAAd;AAGH,GA3BiB,CA6BlB;;;AACA,WAASF,SAAT,GAAoB;AAChB,QAAIK,SAAS,GAAG,CAAC,GAAGZ,IAAJ,CAAhB;AACA,QAAIa,IAAI,GAAGD,SAAS,CAACA,SAAS,CAACE,MAAV,GAAmB,CAApB,CAApB;AACH;;AAED,WAASC,SAAT,GAAoB,CAEnB;;AAED,WAASC,QAAT,GAAmB,CAElB;;AAED,WAASC,QAAT,GAAmB,CAElB;;AAED,WAASC,MAAT,GAAiB,CAEhB,CAjDiB,CAmDlB;;;AAEA,WAASC,WAAT,GAAsB,CAErB,CAvDiB,CA2DlB;AAEA;AACA;AACA;AAEA;;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACK7B,IAAI,CAAC,KAAK8B,KAAL,CAAW3B,GAAZ;AADT;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA/EeK,G;;KAAAA,G;AAiFhB,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\nimport {Grid} from \"./Grid\"\n\nconst gridSize= 40\n\nconst arrInitialize = () => {\n    let arr = new Array(gridSize)\n\n    for (let i=0; i<gridSize ; i++){\n        arr[i] = new Array(gridSize)\n    }\n\n    return arr\n}\n\nconsole.log(arr)\n\n\n\nexport function App() {\n    // Setting States\n    const [arr, setArr] = useState(arrInitialize())\n    const [dots, setDots] = useState([[0,0],[0,1],[0,2],[0,3],[0,4],[0,5]])\n    const [delay, setDelay] = useState(1000)\n    const [direction, setDirection] = useState(\"RIGHT\")\n\n    // Using interval hook\n    useInterval(() => {\n        snakeMove()\n    } ,delay)\n\n\n    // Array Functions\n\n    function arrErase() {\n        let thisArr = arr\n\n        for (let i=0 ; i<gridSize ; i++) {\n            for (let j=0 ; j<gridSize ; j++) {\n                thisArr[i][j] = <div className=\"block\"></div>\n            }\n        }\n\n        this.setState({\n            arr: thisArr\n        })\n    }\n\n    // Snake\n    function snakeMove(){\n        let snakeDots = [...dots]\n        let head = snakeDots[snakeDots.length - 1]\n    }\n\n    function moveRight(){\n\n    }\n\n    function moveDown(){\n\n    }\n\n    function moveLeft(){\n\n    }\n\n    function moveUp(){\n\n    }\n\n    // Snake Update\n\n    function snakeUpdate(){\n\n    }\n\n\n\n    // LifeCycle Functions\n\n    // componentDidMount(){\n    //     this.arrErase()\n    // }\n\n    // LifeCycle Functions\n\n\n\n        \n\n\n\n    return(\n        <div className=\"container\">\n            {Grid(this.state.arr)}\n        </div>\n    )\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}