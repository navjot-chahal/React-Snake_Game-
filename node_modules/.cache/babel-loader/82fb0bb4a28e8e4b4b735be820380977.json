{"ast":null,"code":"var _jsxFileName = \"/Users/chahal/Documents/React Projects/snake/src/Grid.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Grid extends Component {\n  render() {\n    var size = 20;\n    var arr = new Array(size);\n\n    for (var i = 0; i < size; i++) {\n      arr[i] = new Array(size);\n    }\n\n    for (var i = 0; i < size; i++) {\n      for (var j = 0; j < size; j++) arr[i][j] = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 28\n      }, this);\n    }\n\n    function otherFunction(array) {\n      return array;\n    }\n\n    function someFunction(arr) {\n      arr2 = otherFunction(arr[i]);\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: someFunction()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this) //              <div>\n    //     {arr.map((row,rowId) => {\n    //         return (\n    //             <div key={rowId}>\n    //                 {row.map((node,nodeId) => {\n    //                     return (\n    //                         node\n    //                     )\n    //                 })}\n    //             </div>\n    //         )\n    //     })}\n    // </div> \n    ;\n  }\n\n}\n/* <div>\n    {arr.map((row,rowId) => {\n        return (\n            <div key={rowId}>\n                {row.map((node,nodeId) => {\n                    return (\n                        newBlock()\n                    )\n                })}\n            </div>\n        )\n    })}\n</div> */\n\n\nexport default Grid;","map":{"version":3,"sources":["/Users/chahal/Documents/React Projects/snake/src/Grid.js"],"names":["React","Component","Grid","render","size","arr","Array","i","j","otherFunction","array","someFunction","arr2"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA4B;AAIxBE,EAAAA,MAAM,GAAE;AAEJ,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,GAAG,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAAV;;AAEA,SAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,IAAd,EAAmBG,CAAC,EAApB,EAAuB;AACnBF,MAAAA,GAAG,CAACE,CAAD,CAAH,GAAS,IAAID,KAAJ,CAAUF,IAAV,CAAT;AACH;;AACD,SAAK,IAAIG,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACH,IAAf,EAAoBG,CAAC,EAArB,EAAwB;AACpB,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACJ,IAAf,EAAoBI,CAAC,EAArB,EACIH,GAAG,CAACE,CAAD,CAAH,CAAOC,CAAP,iBAAW;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAAX;AACP;;AAID,aAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,aAAOA,KAAP;AACH;;AAED,aAASC,YAAT,CAAsBN,GAAtB,EAA0B;AACtBO,MAAAA,IAAI,GAACH,aAAa,CAACJ,GAAG,CAACE,CAAD,CAAJ,CAAlB;AAIA,0BACA;AAAA;AAAA;AAAA;AAAA,cADA;AAKH;;AAKD,wBACI;AAAA,gBACKI,YAAY;AADjB;AAAA;AAAA;AAAA;AAAA,YADJ,CAQR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBQ;AAuBH;;AA7DuB;AAiE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeT,IAAf","sourcesContent":["import React, {Component} from \"react\"\n\nclass Grid extends Component{\n\n    \n\n    render(){\n\n        var size = 20;\n        var arr = new Array(size);\n\n        for(var i=0;i<size;i++){\n            arr[i] = new Array(size);\n        }\n        for (var i=0;i<size;i++){\n            for (var j=0;j<size;j++)\n                arr[i][j]= <div className=\"block\"></div>\n        }\n\n\n\n        function otherFunction(array){\n            return array\n        }\n\n        function someFunction(arr){\n            arr2=otherFunction(arr[i]);\n\n\n\n            return (\n            <div>\n                \n            </div>\n            );\n        }\n\n        \n\n\n        return(\n            <div>\n                {someFunction()}\n                \n            </div>\n\n\n\n//              <div>\n//     {arr.map((row,rowId) => {\n//         return (\n//             <div key={rowId}>\n//                 {row.map((node,nodeId) => {\n//                     return (\n//                         node\n//                     )\n//                 })}\n//             </div>\n//         )\n//     })}\n// </div> \n\n        );\n    }\n}\n\n\n/* <div>\n    {arr.map((row,rowId) => {\n        return (\n            <div key={rowId}>\n                {row.map((node,nodeId) => {\n                    return (\n                        newBlock()\n                    )\n                })}\n            </div>\n        )\n    })}\n</div> */\n\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}