{"ast":null,"code":"var _jsxFileName = \"/Users/chahal/Documents/React Projects/snake/src/App.js\";\nimport React, { Component } from \"react\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\nimport Grid from \"./Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arr: [[]],\n      count: 0\n    };\n    this.setArr = this.setArr.bind(this);\n  }\n\n  setArr(array) {\n    this.setState({\n      arr: array\n    });\n  }\n\n  render() {\n    if (this.state.count === 0) {\n      // Fixed!!!\n      var size = 40;\n      this.state.arr = new Array(size);\n\n      for (let i = 0; i < size; i++) {\n        this.state.arr[i] = new Array(size);\n      }\n\n      for (let i = 0; i < size; i++) {\n        for (let j = 0; j < size; j++) {\n          this.state.arr[i][j] = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 43\n          }, this);\n        }\n      } // Fixed!!!\n\n    }\n\n    this.state.count++;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Snake, {\n        arr: this.state.arr,\n        setArr: this.setArr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        arr: this.state.arr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/* <div>\n    {arr.map((row,rowId) => {\n        return (\n            <div key={rowId}>\n                {row.map((node,nodeId) => {\n                    return (\n                        newBlock()\n                    )\n                })}\n            </div>\n        )\n    })}\n</div> */\n\n\nexport default App;","map":{"version":3,"sources":["/Users/chahal/Documents/React Projects/snake/src/App.js"],"names":["React","Component","Snake","Food","Grid","App","constructor","props","state","arr","count","setArr","bind","array","setState","render","size","Array","i","j"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AACvBK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,GAAG,EAAC,CAAC,EAAD,CADG;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAAX;AAKA,SAAKC,MAAL,GAAY,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAZ;AACH;;AAEDD,EAAAA,MAAM,CAACE,KAAD,EAAO;AACT,SAAKC,QAAL,CAAc;AACVL,MAAAA,GAAG,EAAEI;AADK,KAAd;AAGH;;AAIDE,EAAAA,MAAM,GAAE;AAEJ,QAAI,KAAKP,KAAL,CAAWE,KAAX,KAAmB,CAAvB,EAAyB;AACrB;AACA,UAAIM,IAAI,GAAG,EAAX;AACA,WAAKR,KAAL,CAAWC,GAAX,GAAiB,IAAIQ,KAAJ,CAAUD,IAAV,CAAjB;;AAEA,WAAK,IAAIE,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACF,IAAf,EAAoBE,CAAC,EAArB,EAAwB;AACpB,aAAKV,KAAL,CAAWC,GAAX,CAAeS,CAAf,IAAoB,IAAID,KAAJ,CAAUD,IAAV,CAApB;AACH;;AAED,WAAK,IAAIE,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACF,IAAf,EAAoBE,CAAC,EAArB,EAAwB;AACpB,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACH,IAAf,EAAoBG,CAAC,EAArB,EAAwB;AACpB,eAAKX,KAAL,CAAWC,GAAX,CAAeS,CAAf,EAAkBC,CAAlB,iBAAsB;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAAtB;AACH;AACJ,OAboB,CAcrB;;AACH;;AAED,SAAKX,KAAL,CAAWE,KAAX;AAEA,wBAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,GAAvB;AACI,QAAA,MAAM,EAAE,KAAKE;AADjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,IAAD;AAAM,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAWH;;AApDsB;AAwD3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeJ,GAAf","sourcesContent":["import React, {Component} from \"react\"\nimport Snake from \"./Snake\";\nimport Food from \"./Food\"\nimport Grid from \"./Grid\"\n\nclass App extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            arr:[[]],\n            count: 0\n        }\n\n        this.setArr=this.setArr.bind(this);\n    }\n\n    setArr(array){\n        this.setState({\n            arr: array\n        })\n    }\n\n     \n\n    render(){\n\n        if (this.state.count===0){\n            // Fixed!!!\n            var size = 40;\n            this.state.arr = new Array(size);\n\n            for (let i=0;i<size;i++){\n                this.state.arr[i] = new Array(size);\n            }\n\n            for (let i=0;i<size;i++){\n                for (let j=0;j<size;j++){\n                    this.state.arr[i][j]= <div className=\"block\"></div>;\n                }\n            }\n            // Fixed!!!\n        }\n        \n        this.state.count++;\n\n        return(\n            \n            <div className=\"container\">\n                <Snake arr={this.state.arr}\n                    setArr={this.setArr}/>\n                <Grid arr={this.state.arr}/>\n                \n                {/* <Food /> */}\n            </div>\n            \n        )\n    }\n}\n\n\n/* <div>\n    {arr.map((row,rowId) => {\n        return (\n            <div key={rowId}>\n                {row.map((node,nodeId) => {\n                    return (\n                        newBlock()\n                    )\n                })}\n            </div>\n        )\n    })}\n</div> */\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}