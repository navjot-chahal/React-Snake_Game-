{"ast":null,"code":"var _jsxFileName = \"/Users/chahal/Documents/React Projects/snake/src/Grid.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Grid extends Component {\n  render() {\n    var arr = [];\n    var size = 20;\n\n    function newBlock() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    } // arr=newBlock();\n\n\n    var arr = new Array(size);\n\n    for (var i = 0; i < size; i++) {\n      arr[i] = new Array(size);\n    }\n\n    for (var i = 0; i < size; i++) {\n      for (var j = 0; j < size; j++) {\n        arr[i][j] = newBlock();\n      }\n    }\n\n    function divchmaar(something) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"something\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    }\n\n    var h = \"hello\";\n\n    function kadhde() {\n      for (var i = 0; i < size; i++) {\n        divchmaar(h);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: kadhde()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this) //              <div>\n    //     {arr.map((row,rowId) => {\n    //         return (\n    //             <div key={rowId}>\n    //                 {row.map((node,nodeId) => {\n    //                     return (\n    //                         node\n    //                     )\n    //                 })}\n    //             </div>\n    //         )\n    //     })}\n    // </div> \n    ;\n  }\n\n}\n/* <div>\n    {arr.map((row,rowId) => {\n        return (\n            <div key={rowId}>\n                {row.map((node,nodeId) => {\n                    return (\n                        newBlock()\n                    )\n                })}\n            </div>\n        )\n    })}\n</div> */\n\n\nexport default Grid;","map":{"version":3,"sources":["/Users/chahal/Documents/React Projects/snake/src/Grid.js"],"names":["React","Component","Grid","render","arr","size","newBlock","Array","i","j","divchmaar","something","h","kadhde"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA4B;AAExBE,EAAAA,MAAM,GAAE;AAEJ,QAAIC,GAAG,GAAC,EAAR;AACA,QAAIC,IAAI,GAAC,EAAT;;AAEA,aAASC,QAAT,GAAmB;AACf,0BAAO;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAPG,CAQJ;;;AAEA,QAAIF,GAAG,GAAG,IAAIG,KAAJ,CAAUF,IAAV,CAAV;;AAEA,SAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,IAAd,EAAmBG,CAAC,EAApB,EAAuB;AACnBJ,MAAAA,GAAG,CAACI,CAAD,CAAH,GAAO,IAAID,KAAJ,CAAUF,IAAV,CAAP;AACH;;AAED,SAAK,IAAIG,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACH,IAAf,EAAoBG,CAAC,EAArB,EAAwB;AACpB,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACJ,IAAf,EAAoBI,CAAC,EAArB,EAAwB;AACpBL,QAAAA,GAAG,CAACI,CAAD,CAAH,CAAOC,CAAP,IAAUH,QAAQ,EAAlB;AACH;AACJ;;AAED,aAASI,SAAT,CAAmBC,SAAnB,EAA6B;AACzB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAIC,CAAC,GAAC,OAAN;;AAEA,aAASC,MAAT,GAAiB;AACb,WAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,IAAd,EAAmBG,CAAC,EAApB,EAAuB;AACnBE,QAAAA,SAAS,CAACE,CAAD,CAAT;AACH;AACJ;;AAED,wBACI;AAAA,gBACKC,MAAM;AADX;AAAA;AAAA;AAAA;AAAA,YADJ,CAQR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBQ;AAuBH;;AA1DuB;AA8D5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeX,IAAf","sourcesContent":["import React, {Component} from \"react\"\n\nclass Grid extends Component{\n\n    render(){\n        \n        var arr=[];\n        var size=20;\n        \n        function newBlock(){\n            return <div className=\"block\"></div>\n        }\n        // arr=newBlock();\n\n        var arr = new Array(size);\n\n        for(var i=0;i<size;i++){\n            arr[i]=new Array(size);\n        }\n        \n        for (var i=0;i<size;i++){\n            for (var j=0;j<size;j++){\n                arr[i][j]=newBlock();\n            }\n        }\n\n        function divchmaar(something){\n            return <div>something</div>\n        }\n        var h=\"hello\";\n\n        function kadhde(){\n            for(var i=0;i<size;i++){\n                divchmaar(h);\n            }\n        }\n\n        return(\n            <div>\n                {kadhde()}\n                \n            </div>\n\n\n\n//              <div>\n//     {arr.map((row,rowId) => {\n//         return (\n//             <div key={rowId}>\n//                 {row.map((node,nodeId) => {\n//                     return (\n//                         node\n//                     )\n//                 })}\n//             </div>\n//         )\n//     })}\n// </div> \n\n        );\n    }\n}\n\n\n/* <div>\n    {arr.map((row,rowId) => {\n        return (\n            <div key={rowId}>\n                {row.map((node,nodeId) => {\n                    return (\n                        newBlock()\n                    )\n                })}\n            </div>\n        )\n    })}\n</div> */\n\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}