{"ast":null,"code":"var _jsxFileName = \"/Users/chahal/Documents/React Projects/snake/src/Snake.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Snake extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dots: [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5]],\n      direction: \"RIGHT\",\n      directionUpdate: true\n    };\n    this.snakeMove = this.snakeMove.bind(this);\n    this.snakeUpdate = this.snakeUpdate.bind(this);\n    this.moveUp = this.moveUp.bind(this);\n    this.moveRight = this.moveRight.bind(this);\n    this.moveDown = this.moveDown.bind(this);\n    this.moveLeft = this.moveLeft.bind(this);\n    this.eventHandler = this.eventHandler.bind(this);\n  }\n\n  snakeUpdate() {\n    // Fixed!!!\n    var size = 40;\n    this.state.arr = new Array(size);\n\n    for (let i = 0; i < size; i++) {\n      this.state.arr[i] = new Array(size);\n    }\n\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        this.state.arr[i][j] = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 39\n        }, this);\n      }\n    } // Fixed!!!\n    // Snake update\n\n\n    let some = this.props.arr;\n\n    for (let i = 0; i < this.state.dots.length; i++) {\n      let x = this.state.dots[i][0];\n      let y = this.state.dots[i][1];\n      some[x][y] = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }, this);\n    } // Snake \n\n\n    this.props.setArr(some);\n  }\n\n  snakeMove() {\n    console.log(\"Snake is Moving!!!!!\");\n\n    switch (this.state.direction) {\n      case \"UP\":\n        this.moveUp();\n        break;\n\n      case \"RIGHT\":\n        this.moveRight();\n        break;\n\n      case \"DOWN\":\n        this.moveDown();\n        break;\n\n      case \"LEFT\":\n        this.moveLeft();\n        break;\n    }\n\n    this.snakeUpdate();\n  }\n\n  moveRight() {\n    let tempArr = this.state.dots;\n    tempArr[0] = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this);\n    tempArr.shift();\n    tempArr.push([tempArr[tempArr.length - 1][0] + 1, tempArr[tempArr.length - 1][1]]);\n    this.state.dots = tempArr;\n  }\n\n  moveDown() {\n    let tempArr = this.state.dots;\n    tempArr[0] = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this);\n    tempArr.shift();\n    tempArr.push([tempArr[tempArr.length - 1][0], tempArr[tempArr.length - 1][1] + 1]);\n    this.state.dots = tempArr;\n  }\n\n  moveLeft() {\n    let tempArr = this.state.dots;\n    tempArr[0] = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 16\n    }, this);\n    tempArr.shift();\n    tempArr.push([tempArr[tempArr.length - 1][0] - 1, tempArr[tempArr.length - 1][1]]);\n    this.state.dots = tempArr;\n  }\n\n  moveUp() {\n    let tempArr = this.state.dots;\n    tempArr[0] = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 16\n    }, this);\n    tempArr.shift();\n    tempArr.push([tempArr[tempArr.length - 1][0], tempArr[tempArr.length - 1][1] - 1]);\n    this.state.dots = tempArr;\n  }\n\n  eventHandler(e) {\n    console.log(\"Some key Pressed!!!!\");\n    console.log(e.code);\n    if (!this.state.directionUpdate) return;\n\n    switch (e.code) {\n      case \"ArrowRight\":\n        if (this.state.direction === \"RIGHT\" || this.state.direction === \"LEFT\") return;\n        this.state.direction = \"RIGHT\";\n        break;\n\n      case \"ArrowDown\":\n        if (this.state.direction === \"DOWN\" || this.state.direction === \"UP\") return;\n        this.state.direction = \"DOWN\";\n        break;\n\n      case \"ArrowLeft\":\n        if (this.state.direction === \"RIGHT\" || this.state.direction === \"LEFT\") return;\n        this.state.direction = \"LEFT\";\n        break;\n\n      case \"ArrowUp\":\n        if (this.state.direction === \"DOWN\" || this.state.direction === \"UP\") return;\n        this.state.direction = \"UP\";\n        break;\n    }\n\n    this.state.directionUpdate = false;\n  }\n\n  componentDidMount() {\n    // this.snakeUpdate();\n    // console.log(this.props.dots);\n    // this.snakeMove();\n    setInterval(this.snakeMove, 100);\n    window.addEventListener(\"keydown\", this.eventHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.eventHandler);\n  }\n\n  render() {\n    this.state.directionUpdate = true;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: console.log(\"Snake Rendered!!!\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Snake;","map":{"version":3,"sources":["/Users/chahal/Documents/React Projects/snake/src/Snake.js"],"names":["React","Component","Snake","constructor","props","state","dots","direction","directionUpdate","snakeMove","bind","snakeUpdate","moveUp","moveRight","moveDown","moveLeft","eventHandler","size","arr","Array","i","j","some","length","x","y","setArr","console","log","tempArr","shift","push","e","code","componentDidMount","setInterval","window","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\n\n\nclass Snake extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state={\n            dots: [[0,0],[0,1],[0,2],[0,3],[0,4],[0,5]],\n            direction: \"RIGHT\",\n            directionUpdate: true\n        }\n\n        this.snakeMove=this.snakeMove.bind(this);\n        this.snakeUpdate=this.snakeUpdate.bind(this);\n\n        this.moveUp=this.moveUp.bind(this);\n        this.moveRight=this.moveRight.bind(this);\n        this.moveDown=this.moveDown.bind(this);\n        this.moveLeft=this.moveLeft.bind(this);\n\n        this.eventHandler=this.eventHandler.bind(this);\n    }\n\n    snakeUpdate(){\n        // Fixed!!!\n        var size = 40;\n        this.state.arr = new Array(size);\n\n        for (let i=0;i<size;i++){\n            this.state.arr[i] = new Array(size);\n        }\n\n        for (let i=0;i<size;i++){\n            for (let j=0;j<size;j++){\n                this.state.arr[i][j]= <div className=\"block\"></div>;\n            }\n        }\n        // Fixed!!!\n       // Snake update\n       let some=this.props.arr;\n       for (let i=0; i<this.state.dots.length;i++){\n           let x = this.state.dots[i][0];\n           let y = this.state.dots[i][1];\n\n           some[x][y]= <div className=\"dot\"></div>;\n       }\n       // Snake \n       this.props.setArr(some);\n   }\n\n   snakeMove() {\n    console.log(\"Snake is Moving!!!!!\");\n\n    switch (this.state.direction){\n        case \"UP\":\n            this.moveUp();\n            break;\n        case \"RIGHT\":\n            this.moveRight();\n            break;\n        case \"DOWN\":\n            this.moveDown();\n            break;\n        case \"LEFT\":\n            this.moveLeft();\n            break;\n    }  \n    this.snakeUpdate();    \n}\n\nmoveRight(){\n    let tempArr=this.state.dots;\n    tempArr[0]=<div className=\"dot\"></div>;\n    tempArr.shift()\n    tempArr.push([tempArr[tempArr.length-1][0]+1,tempArr[tempArr.length-1][1]]);\n\n    this.state.dots=tempArr;\n}\n\nmoveDown(){\n    let tempArr=this.state.dots;\n    tempArr[0]=<div className=\"dot\"></div>;\n    tempArr.shift()\n    tempArr.push([tempArr[tempArr.length-1][0],tempArr[tempArr.length-1][1]+1]);\n\n    this.state.dots=tempArr;\n}\n\nmoveLeft(){\n    let tempArr=this.state.dots;\n    tempArr[0]=<div className=\"dot\"></div>;\n    tempArr.shift();\n    tempArr.push([tempArr[tempArr.length-1][0]-1,tempArr[tempArr.length-1][1]]);\n\n    this.state.dots=tempArr;\n}\n\nmoveUp(){\n    let tempArr=this.state.dots;\n    tempArr[0]=<div className=\"dot\"></div>;\n    tempArr.shift()\n    tempArr.push([tempArr[tempArr.length-1][0],tempArr[tempArr.length-1][1]-1]);\n\n    this.state.dots=tempArr;\n}\n\n   eventHandler(e){\n    console.log(\"Some key Pressed!!!!\");\n    console.log(e.code);\n\n    if(!this.state.directionUpdate) return;\n\n    switch(e.code){\n        case \"ArrowRight\":\n            if (this.state.direction===\"RIGHT\" || this.state.direction===\"LEFT\" ) return;\n            this.state.direction = \"RIGHT\";\n            break;\n        case \"ArrowDown\":\n            if (this.state.direction===\"DOWN\" || this.state.direction===\"UP\" ) return;\n            this.state.direction = \"DOWN\";\n            break;\n        case \"ArrowLeft\":\n            if (this.state.direction===\"RIGHT\" || this.state.direction===\"LEFT\" ) return;\n            this.state.direction = \"LEFT\";\n            break;\n        case \"ArrowUp\":\n            if (this.state.direction===\"DOWN\" || this.state.direction===\"UP\" ) return;\n            this.state.direction = \"UP\";\n            break;\n        }\n        this.state.directionUpdate=false;\n    }\n\n    componentDidMount(){    \n        // this.snakeUpdate();\n        // console.log(this.props.dots);\n        // this.snakeMove();\n        setInterval(this.snakeMove,100);\n        window.addEventListener(\"keydown\",this.eventHandler);\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener(\"keydown\",this.eventHandler);\n    }\n\n    render(){\n        this.state.directionUpdate=true;\n\n        return (\n            <div>\n                {console.log(\"Snake Rendered!!!\")}\n            </div>\n        );\n    }\n\n\n\n}\n\nexport default Snake;"]},"metadata":{},"sourceType":"module"}